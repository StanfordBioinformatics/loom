---
- name: Gather information needed to create the worker instance.
  hosts: localhost
  connection: local
  vars_files:
  - vars/common.yml
  - vars/gcloud_worker.yml
  tasks:
    - include: tasks/gcloud_get_worker_instance_name.yml
    - name: Find the cheapest instance type that has at least the cores and memory needed by the task.
      command: python -c "import gcloud_utils; gcloud_utils.get_cheapest_instance_type({{cores}}, {{memory}})"
      args:
        chdir: "{{playbook_dir}}/files"
      register: instance_type_result
    - set_fact:
        instance_type: "{{instance_type_result.stdout}}"

- name: Create a new instance for the Loom worker.
  hosts: localhost
  connection: local
  vars_files:
  - vars/common.yml
  - vars/gcloud_worker.yml
  tasks:
  - include: tasks/gcloud_create_instance.yml use_internal_ip={{worker_uses_internal_ip}}
  - include: tasks/gcloud_configure_instance_ssh.yml use_internal_ip={{worker_uses_internal_ip}}

- name: Set facts on the worker instance.
  hosts: new_instances
  remote_user: "{{loom_remote_user}}"
  vars_files:
  - vars/common.yml
  - vars/gcloud_worker.yml
  tasks:
    - name: Set vars for downstream tasks.
      set_fact:
        instance_name: "{{hostvars.localhost.instance_name}}"

- name: Install Docker on the Loom worker and add remote user to docker group.
  hosts: new_instances
  remote_user: "{{loom_remote_user}}"
  become: yes
  vars_files:
  - vars/common.yml
  - vars/gcloud_worker.yml
  roles:
  - {role: docker, when: "not lookup('env', 'LOOM_GCLOUD_WORKER_SKIP_INSTALLS') | bool"}
  - {role: docker-py, when: "not lookup('env', 'LOOM_GCLOUD_WORKER_SKIP_INSTALLS') | bool"}
  tasks:
  - include: tasks/gcloud_create_docker_group.yml

- name: Log into Google Container Registry.
  hosts: new_instances
  remote_user: "{{loom_remote_user}}"
  become: yes
  vars_files:
  - vars/common.yml
  - vars/gcloud_worker.yml
  tasks:
  - include: tasks/gcloud_docker_login.yml

- name: Pull Docker images on the new instance.
  hosts: new_instances
  remote_user: "{{loom_remote_user}}"
  become: yes
  vars_files:
  - vars/common.yml
  - vars/gcloud_worker.yml
  tasks:
  - include: tasks/pull_worker_docker_images.yml

- name: Execute a Loom task attempt on the specified worker instance.
  hosts: new_instances
  remote_user: "{{loom_remote_user}}"
  become: yes
  vars_files:
    - vars/common.yml
    - vars/gcloud_worker.yml
  vars:
    task_attempt_id: "{{lookup('env', 'LOOM_TASK_ATTEMPT_ID')}}"
    server_url: "{{lookup('ini', 'LOOM_SERVER_URL type=properties file='+container_settings_home+'/'+worker_connection_settings_file)}}"
  tasks:
    - include: tasks/run_task.yml
