# Required settings
settings_home: "{{lookup('env', 'LOOM_SETTINGS_HOME')}}"
resource_dir: "{{lookup('env', 'LOOM_RESOURCE_DIR')}}"
loom_playbook_dir: "{{lookup('env', 'LOOM_PLAYBOOK_DIR')}}"
loom_inventory_dir: "{{lookup('env', 'LOOM_INVENTORY_DIR')}}"
server_settings_file: "{{lookup('env', 'LOOM_SERVER_SETTINGS_FILE')}}"
connection_settings_file: "{{lookup('env', 'LOOM_CONNECTION_SETTINGS_FILE')}}"
settings_bundle_file: "settings-bundle.tgz"
storage_type: "{{lookup('env','LOOM_STORAGE_TYPE')}}"
storage_root: "{{lookup('env','LOOM_STORAGE_ROOT')}}"
internal_storage_root: "{{lookup('env','LOOM_STORAGE_ROOT')}}"

# Non-required settings, with defaults if necessary

# General
debug: "{{lookup('env', 'LOOM_DEBUG')|default(false, true)|bool}}"
server_name: "{{lookup('env', 'LOOM_SERVER_NAME')|truncate(63,true,'')}}"
log_level: "{{lookup('env', 'LOOM_LOG_LEVEL')|default('INFO', true)|upper}}"
container_settings_home: /loom-settings
default_registry: "{{lookup('env', 'LOOM_DEFAULT_DOCKER_REGISTRY')}}"
raw_image: "{{lookup('env', 'LOOM_DOCKER_IMAGE')}}"
loom_docker_image: "{% if default_registry %}{% if not ('.' in raw_image.split('/')[0]) %}{{default_registry}}/{% endif %}{% endif %}{{raw_image}}"
raw_task_attempt_image: "{{lookup('env','LOOM_TASK_ATTEMPT_DOCKER_IMAGE')}}"
task_attempt_docker_image: "{% if default_registry %}{% if not ('.' in raw_task_attempt_image.split('/')[0]) %}{{default_registry}}/{% endif %}{% endif %}{{raw_task_attempt_image}}"
token: "{{lookup('env', 'LOOM_TOKEN')|default('',true)}}"

# HTTP settings
http_port: "{{lookup('env', 'LOOM_HTTP_PORT')|default(80, true)|int}}"
https_port: "{{lookup('env', 'LOOM_HTTPS_PORT')|default(443, true)|int}}"
http_port_enabled: "{{lookup('env', 'LOOM_HTTP_PORT_ENABLED')|default(true, true)|bool}}"
https_port_enabled: "{{lookup('env', 'LOOM_HTTPS_PORT_ENABLED')|default(false, true)|bool}}"
server_port: "{{https_port if https_port_enabled else http_port}}"
server_protocol: "{{'https' if https_port_enabled else 'http'}}"

# SSL settings
ssl_cert_create_new: "{{lookup('env', 'LOOM_SSL_CERT_CREATE_NEW')|default(false, true)|bool}}"
ssl_cert_key_file: "{{lookup('env', 'LOOM_SSL_CERT_KEY_FILE')|default(server_name~'-ssl.key',true)}}"
ssl_cert_file: "{{lookup('env', 'LOOM_SSL_CERT_FILE')|default(server_name~'-ssl.crt',true)}}"
ssl_cert_c: "{{lookup('env', 'LOOM_SSL_CERT_C')|default('US', true)}}"
ssl_cert_st: "{{lookup('env', 'LOOM_SSL_CERT_ST')|default('California', true)}}"
ssl_cert_l: "{{lookup('env', 'LOOM_SSL_CERT_L')|default('Palo Alto', true)}}"
ssl_cert_o: "{{lookup('env', 'LOOM_SSL_CERT_O')|default('Stanford University', true)}}"
ssl_cert_cn: "{{lookup('env', 'LOOM_SSL_CERT_CN')|default(ansible_hostname, true)}}"
ssl_cert_subj: "/C={{ssl_cert_c}}/ST={{ssl_cert_st}}/L={{ssl_cert_l}}/O={{ssl_cert_o}}/CN={{ssl_cert_cn}}"

# Fluentd container settings
fluentd_image: "{{lookup('env', 'LOOM_FLUENTD_IMAGE')|default('loomengine/fluentd-forest-googlecloud', true)}}"
fluentd_container_name: "{{server_name|truncate(55,true,'')}}-fluentd"
fluentd_outputs: "{{lookup('env', 'LOOM_FLUENTD_OUTPUTS')|default('elasticsearch,file', true)}}"
fluentd_port: "{{lookup('env', 'LOOM_FLUENTD_PORT')|default(24224, true)|int}}"
fluentd_address: "{{server_url|regex_replace('^.*://([^:]+)(?::.+)?$', '\\1')}}:{{fluentd_port}}"
fluentd_tag: loom.{%raw%}{{.Name}}.{{.ID}}{%endraw%}
fluentd_async_connect: "true"
fluentd_log_opts: "{{{'tag':fluentd_tag,'fluentd-async-connect':fluentd_async_connect,'fluentd-address':fluentd_address}}}"

# Elasticsearch container settings
raw_elasticsearch_image: "{{lookup('env', 'LOOM_ELASTICSEARCH_IMAGE')|default('docker.elastic.co/elasticsearch/elasticsearch:5.3.2', true)}}"

elasticsearch_image: "{% if default_registry %}{% if not ('.' in raw_elasticsearch_image.split('/')[0]) %}{{default_registry}}/{% endif %}{% endif %}{{raw_elasticsearch_image}}"
elasticsearch_container_name: "{{server_name|truncate(49,true,'')}}-elasticsearch"
elasticsearch_port: "{{lookup('env', 'LOOM_ELASTICSEARCH_PORT')|default(9200, true)|int}}"
elasticsearch_data_volume: "{{lookup('env', 'LOOM_ELASTICSEARCH_DATA_VOLUME')|default(server_name~'-eslogs', true)}}"
elasticsearch_java_opts: "{{lookup('env', 'LOOM_ELASTICSEARCH_JAVA_OPTS')|default('-Xms512m -Xmx512m', true)}}"
elasticsearch_url: "http://{{server_url|regex_replace('^.*://([^:]+)(?::.+)?$', '\\1')}}:{{elasticsearch_port}}"

# Kibana container settings
kibana_version: "{{lookup('env', 'LOOM_KIBANA_VERSION')|default('5.3.2', true)}}"
default_kibana_image: "docker.elastic.co/kibana/kibana:{{kibana_version}}"
raw_kibana_image: "{{lookup('env', 'LOOM_KIBANA_IMAGE')|default(default_kibana_image, true)}}"
kibana_image: "{% if default_registry %}{% if not ('.' in raw_kibana_image.split('/')[0]) %}{{default_registry}}/{% endif %}{% endif %}{{raw_kibana_image}}"
kibana_container_name: "{{server_name|truncate(56,true,'')}}-kibana"
kibana_port: "{{lookup('env', 'LOOM_KIBANA_PORT')|default(5601, true)|int}}"

# MySQL container settings
mysql_create_docker_container: "{{lookup('env', 'LOOM_MYSQL_CREATE_DOCKER_CONTAINER')|default(true, true)|bool}}"
raw_mysql_image: "{{lookup('env', 'LOOM_MYSQL_IMAGE')|default('mysql:5.7.17', true)}}"
mysql_image: "{% if default_registry %}{% if not ('.' in raw_mysql_image.split('/')[0]) %}{{default_registry}}/{% endif %}{% endif %}{{raw_mysql_image}}"
mysql_container_name: "{{server_name|truncate(57,true,'')}}-mysql"
mysql_data_volume: "{{lookup('env', 'LOOM_MYSQL_DATA_VOLUME')|default(server_name~'-mysqldata', true)}}"
mysql_random_root_password: >
  "{{lookup('env', 'LOOM_MYSQL_RANDOM_ROOT_PASSWORD')|default(true, true)|bool}}"
mysql_database: "{{lookup('env', 'LOOM_MYSQL_DATABASE')|default('loomdb', true)}}"
mysql_port: "{{lookup('env', 'LOOM_MYSQL_PORT')|default('3306', true)|int}}"
mysql_user: "{{lookup('env', 'LOOM_MYSQL_USER')|default('loom', true)}}"
mysql_password: "{{lookup('env', 'LOOM_MYSQL_PASSWORD')|default('loompass', true)}}"
mysql_host: "{{mysql_container_name if mysql_create_docker_container \
             else lookup('env', 'LOOM_MYSQL_HOST')}}"

cert_file: "{{lookup('env', 'LOOM_MYSQL_SSL_CA_CERT_FILE')}}"
client_cert_file: "{{lookup('env', 'LOOM_MYSQL_SSL_CLIENT_CERT_FILE')}}"
client_key_file: "{{lookup('env', 'LOOM_MYSQL_SSL_CLIENT_KEY_FILE')}}"

container_mysql_ssl_ca_cert_path: "{{container_settings_home+'/'+resource_dir+'/'+cert_file if cert_file else none}}"
container_mysql_ssl_client_cert_path: "{{container_settings_home+'/'+resource_dir+'/'+client_cert_file if client_cert_file else none}}"
container_mysql_ssl_client_key_path: "{{container_settings_home+'/'+resource_dir+'/'+client_key_file if client_key_file else none}}"

# Rabbitmq container settings
raw_rabbitmq_image: "{{lookup('env', 'LOOM_RABBITMQ_MANAGEMENT_IMAGE')|default('rabbitmq:3.6.8-management', true) if debug else lookup('env', 'LOOM_RABBITMQ_IMAGE')|default('rabbitmq:3.6.8', true)}}"
rabbitmq_image: "{% if default_registry %}{% if not ('.' in raw_rabbitmq_image.split('/')[0]) %}{{default_registry}}/{% endif %}{% endif %}{{raw_rabbitmq_image}}"
rabbitmq_container_name: "{{server_name|truncate(54,true,'')}}-rabbitmq"
rabbitmq_user: "{{lookup('env', 'LOOM_RABBITMQ_USER')|default('guest', true)}}"
rabbitmq_password: "{{lookup('env', 'LOOM_RABBITMQ_PASSWORD')|default('guest', true)}}"
rabbitmq_port: "{{lookup('env', 'LOOM_RABBITMQ_PORT')|default(5672, true)|int}}"
rabbitmq_vhost: "{{lookup('env', 'LOOM_RABBITMQ_VHOST')|default('/', true)}}"
rabbitmq_host: "{{rabbitmq_container_name}}"
rabbitmq_data_volume: "{{lookup('env', 'LOOM_RABBITMQ_DATA_VOLUME')|default(server_name~'-rabbitmqdata', true)}}"

# Celery worker container settings
worker_container_name: "{{server_name|truncate(56,true,'')}}-worker"

# Celery scheduler container settings
scheduler_container_name: "{{server_name|truncate(53,true,'')}}-scheduler"

# Flower container settings
flower_container_name: "{{server_name|truncate(56,true,'')}}-flower"
flower_internal_port: "{{lookup('env', 'LOOM_FLOWER_INTERNAL_PORT')|default(5555, true)|int}}"

# NGINX container settings
nginx_image: "{{lookup('env', 'LOOM_NGINX_IMAGE')|default('nginx:1.11', true)}}"
nginx_container_name: "{{server_name|truncate(57,true,'')}}-nginx"
  
nginx_server_name: "{{lookup('env', 'LOOM_NGINX_SERVER_NAME')|default('localhost',true)}}"

# Loom server container settings
server_container_name: "{{server_name|truncate(56,true,'')}}"
server_internal_port: "{{lookup('env', 'LOOM_SERVER_INTERNAL_PORT')|default(8000,true)|int}}"
static_root: "{{lookup('env', 'LOOM_STATIC_ROOT')|default('/var/www/loom/static', true)}}"
portal_root: "{{lookup('env', 'LOOM_PORTAL_ROOT')|default('/var/www/loom/portal', true)}}"

# Volume names
portal_data_volume: "{{lookup('env', 'LOOM_PORTAL_DATA_VOLUME')|default(server_name~'-portal', true)}}"
static_data_volume: "{{lookup('env', 'LOOM_STATIC_DATA_VOLUME')|default(server_name~'-static', true)}}"

# Loom task attempt container settings
task_attempt_monitor_container_name: "{{server_name|truncate(55,true,'')}}-monitor"
# process container name is duplicated in TaskAttempt settings view
task_attempt_process_container_name: "{{server_name}}-attempt"

# Google Cloud storage settings
google_storage_bucket: "{{lookup('env', 'LOOM_GOOGLE_STORAGE_BUCKET')}}"
gce_project: "{{lookup('env','GCE_PROJECT')}}"

# SSH
ssh_private_key_name: "{{lookup('env', 'LOOM_SSH_PRIVATE_KEY_NAME')|default('loom_id_rsa', true)}}"
ansible_ssh_private_key_file: "{{lookup('env', 'HOME')}}/.ssh/{{ssh_private_key_name}}"
