---
- name: Create storage bucket. Ignore error if bucket already exists.
  hosts: localhost
  connection: local
  vars_files:
  - vars/common.yml
  - vars/gcloud_server.yml
  tasks:
  - include: tasks/create_google_storage_bucket.yml

- name: Create a new instance for the Loom server and configure SSH.
  hosts: localhost
  connection: local
  vars_files:
  - vars/common.yml
  - vars/gcloud_server.yml
  tasks:
  - include: tasks/create_user_and_ssh_key.yml ssh_private_key_path={{server_ssh_private_key_path_on_client}}
  - include: tasks/gcloud_create_instance.yml use_internal_ip={{client_uses_internal_ip}}
  - include: tasks/gcloud_configure_instance_ssh.yml use_internal_ip={{client_uses_internal_ip}} ssh_private_key_path={{server_ssh_private_key_path_on_client}}
  - name: Save server IP for worker.
    set_fact:
      server_ip_for_client: "{{groups['new_instances'][0]}}"
      server_ip_for_worker: "{{ (worker_uses_internal_ip) | ternary(gce_result.instance_data[0].private_ip, gce_result.instance_data[0].public_ip) }}"

- name: Create connection settings files now that we have server IPs.
  hosts: localhost
  connection: local
  vars_files:
  - vars/common.yml
  - vars/gcloud_server.yml
  tasks:
  - include: tasks/create_connection_settings.yml server_url={{server_protocol}}://{{server_ip_for_client}}:{{server_port}}
  - include: tasks/create_connection_settings.yml server_url={{server_protocol}}://{{server_ip_for_worker}}:{{server_port}} connection_settings_file={{worker_connection_settings_file}}

- name: Install Docker on the Loom server and add remote user to docker group.
  hosts: new_instances
  remote_user: "{{remote_user}}"
  become: yes
  vars_files:
  - vars/common.yml
  - vars/gcloud_server.yml
  roles:
  - {role: docker, when: "not {{lookup('env', 'LOOM_GCLOUD_SERVER_SKIP_INSTALLS')|bool}}"}
  - {role: docker-py, when: "not {{lookup('env', 'LOOM_GCLOUD_SERVER_SKIP_INSTALLS')|bool}}"}
  tasks:
  - include: tasks/gcloud_create_docker_group.yml

- name: Log into Google Container Registry.
  hosts: new_instances
  remote_user: "{{remote_user}}"
  become: yes
  vars_files:
  - vars/common.yml
  - vars/gcloud_server.yml
  tasks:
  - include: tasks/gcloud_docker_login.yml

- name: Pull Docker images on the new instance. Create remote user and an SSH key that will be used to connect to workers.
  hosts: new_instances
  remote_user: "{{remote_user}}"
  become: yes
  vars_files:
  - vars/common.yml
  - vars/gcloud_server.yml
  tasks:
  - include: tasks/pull_docker_images.yml
  - include: tasks/create_user_and_ssh_key.yml ssh_private_key_path={{worker_ssh_private_key_path_on_server}}

- name: Copy files to Loom server.
  hosts: new_instances
  remote_user: "{{remote_user}}"
  vars_files:
  - vars/common.yml
  - vars/gcloud_server.yml
  tasks:
  - name: Create a settings directory on the server
    file:
      path: "{{server_settings_home}}"
      state: directory
  - name: Copy inventory directory from client to server
    synchronize:
      src: "{{settings_home}}/{{loom_inventory_dir}}/"
      dest: "{{server_settings_home}}/{{loom_inventory_dir}}"
  - name: Set inventory files to be executable.
    file:
      path: "{{server_settings_home}}/{{loom_inventory_dir}}"
      state: directory
      mode: "a+x"
      recurse: yes
  - name: Copy worker connection settings file from client to server
    synchronize:
      src: "{{settings_home}}/{{worker_connection_settings_file}}"
      dest: "{{server_settings_home}}"
  - name: Copy admin files directory from client to server
    synchronize:
      src: "{{settings_home}}/{{admin_files_dir}}/"
      dest: "{{server_settings_home}}/{{admin_files_dir}}"
  - name: Copy playbooks directory from client to server
    synchronize:
      src: "{{settings_home}}/{{loom_playbook_dir}}/"
      dest: "{{server_settings_home}}/{{loom_playbook_dir}}"
  - name: Copy admin settings file from client to server.
    synchronize:
      src: "{{settings_home}}/{{admin_settings_file}}"
      dest: "{{server_settings_home}}/{{admin_settings_file}}"

- name: Start the Loom server.
  hosts: new_instances
  remote_user: "{{remote_user}}"
  become: yes
  vars_files:
  - vars/common.yml
  - vars/gcloud_server.yml
  vars:
  - server_url: "{{lookup('ini', 'LOOM_SERVER_URL type=properties file='+settings_home+'/'+connection_settings_file)}}"
  tasks:
  - include: tasks/start_server.yml

- name: Wait for Loom server to be ready.
  hosts: localhost
  connection: local
  vars_files:
  - vars/common.yml
  - vars/gcloud_server.yml
  vars:
  - server_url: "{{lookup('ini', 'LOOM_SERVER_URL type=properties file='+settings_home+'/'+connection_settings_file)}}"
  - host: "{{server_ip_for_client}}"
  tasks:
  - include: tasks/wait_for_server_to_start.yml
