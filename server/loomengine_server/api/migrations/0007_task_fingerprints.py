# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-03-10 05:08
from __future__ import unicode_literals

import api.models.base
from django.db import migrations, models
import django.db.models.deletion


def add_to_all_task_attempts(task, task_attempt, TaskMembership):
    tm = TaskMembership(parent_task=task, child_task_attempt=task_attempt)
    tm.save()


def forward(apps, schema_editor):
    TaskAttempt = apps.get_model('api', 'TaskAttempt')
    Task = apps.get_model('api', 'Task')
    TaskMembership= apps.get_model('api', 'TaskMembership')

    for task_attempt in TaskAttempt.objects.all():
        # Move Task.all_task_attempts from deprecated ForeignKey
        # to new M2M
        if task_attempt.task is not None:
            add_to_all_task_attempts(task_attempt.task, task_attempt, TaskMembership)


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0006_auto_20180220_2202'),
    ]

    operations = [
        # Single-field updates
        migrations.AddField(
            model_name='taskattempt',
            name='status_is_initializing',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='run',
            name='force_rerun',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='task',
            name='task_attempt',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='active_on_tasks', to='api.TaskAttempt'),
        ),
        migrations.AlterField(
            model_name='taskattempt',
            name='status_is_running',
            field=models.BooleanField(default=False),
        ),

        # Change related_name to avoid clash "with all_task_attempts"
        migrations.AlterField(
            model_name='taskattempt',
            name='task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deprecated_all_task_attempts', to='api.Task'),
        ),

        # New TaskFingerprint model
        migrations.CreateModel(
            name='TaskFingerprint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_change', models.IntegerField(default=0)),
                ('value', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, api.models.base._FilterMixin),
        ),
        migrations.AddField(
            model_name='taskfingerprint',
            name='active_task_attempt',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fingerprint', to='api.TaskAttempt'),
        ),

        # New M2M task<->task_attempt replaces ForeignKey task_attempt->task
        migrations.CreateModel(
            name='TaskMembership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_change', models.IntegerField(default=0)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, api.models.base._FilterMixin),
        ),
        migrations.AddField(
            model_name='taskmembership',
            name='child_task_attempt',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.TaskAttempt'),
        ),
        migrations.AddField(
            model_name='taskmembership',
            name='parent_task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Task'),
        ),
        migrations.AddField(
            model_name='taskattempt',
            name='tasks',
            field=models.ManyToManyField(related_name='all_task_attempts', through='api.TaskMembership', to='api.Task'),
        ),

        # Migrate all_task_attempts data before removing deprecated field
        migrations.RunPython(forward),
        migrations.RemoveField(
            model_name='taskattempt',
            name='task',
        ),
    ]
